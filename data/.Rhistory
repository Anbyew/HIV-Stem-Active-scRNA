library(hdf5r)
readRDS('HSPC_pilot_MV.rds')
mid_thresh=3.5
hspc = readRDS('HSPC_pilot_MV.rds')
log2_TPM = density(hspc@data["HIV",],from=0,to=max(hspc@data["HIV",]))$x
Density = density(hspc@data["HIV",],from=0,to=max(hspc@data["HIV",]))$y
ViralTranscription = rep(c("Low","High"),length(log2_TPM)/2)
viral_counts = data.frame(log2_TPM,Density,ViralTranscription)
viral_counts$ViralTranscription[log2_TPM <= mid_thresh]="Low"
viral_counts$ViralTranscription[log2_TPM > mid_thresh]="High"
View(viral_counts)
View(hspc)
View(viral_counts)
View(viral_counts)
plot(log2_TPM, density)
plot(log2_TPM, Density)
plot(density(pbmc2@data["HIV",]))
plot(density(hspc@data["HIV",]))
plot(density(hspc@data["mCherry",]))
plot(density(hspc@data["HIV",]))
?plot
plot(density(hspc@data["HIV",])col = "red")
plot(density(hspc@data["HIV",]), col = "red")
plot(density(hspc@data["HIV",]), cl = "red")
plot(density(hspc@data["HIV",]), col = "red")
plot(density(hspc@data["HIV",]), col = "red", fill="red")
library(ggplot2)
ggplot(density(hspc@data["HIV",]), aes(colour="red", fill="red"))
ggplot(log2_TPM, density, aes(colour="red", fill="red"))
ggplot(log2_TPM, density, colour="red", fill="red")
ggplot?
?
.
?ggplot
ggplot(aes(log2_TPM, density, colour="red", fill="red"))
ggplot(hspc@data, aes(log2_TPM, density, colour="red", fill="red"))
4
5
6
7
8
9
10
11
12
# library
library(ggridges)
library(ggplot2)
# Data
head(diamonds)
# basic example
ggplot(diamonds, aes(x = price, y = cut, fill = cut)) +
geom_density_ridges() +
theme_ridges() +
theme(legend.position = "none")
diamonds
hspc@data
ggplot(diamonds, aes(x = price, y = cut, fill = cut)) +
geom_density_ridges() +
theme_ridges() +
theme(legend.position = "none")
ggplot(hspc@data, aes(x=log2_TPM, y=density, fill="red"))
ggplot(fortify(hspc@data), aes(x=log2_TPM, y=density, fill="red"))
ggplot(hspc@data)
ggplot(Density)
ggplot(Density)
ggplot(Density, log2_TPM)
df = as.data.frame(hspc@data)
View(viral_counts)
View(hspc)
View(viral_counts)
hspc@data["HIV",]
shape(hspc@data["HIV",])
hspc@data["HIV",]
hspc@data["HIV",].shaoe
hspc@data["HIV",].shape
hspc@data["HIV",].shape()
hspc@data["HIV",]
hist(hspc@data["HIV",])
plot(density(pbmc2@data["HIV",]))
plot(density(hspc@data["HIV",]))
plot(density(hspc@data["HIV",]),from=0,to=max(hspc@data["HIV",]))
plot(density(hspc@data["HIV",]),from=0,to=max(hspc@data["HIV",]))
plot(density(hspc@data["HIV",]),from=0,to=max(hspc@data["HIV",])))
plot(density(hspc@data["HIV",]),from=0,to=max(hspc@data["HIV",]))
View(viral_counts)
ggplot(viral_counts)
ggplot(viral_counts, aes(x=log2_TPM, y=Density))
ggplot(viral_counts, aes(x=log2_TPM, y=Density, fill='red'))
ggplot(diamonds, aes(x = log2_TPM, y = Density, fill = 'red')) +
geom_density_ridges() +
theme_ridges() +
theme(legend.position = "none")
ggplot(viral_counts, aes(x = log2_TPM, y = Density, fill = 'red')) +
geom_density_ridges() +
theme_ridges())
ggplot(viral_counts, aes(x = log2_TPM, y = Density, fill = 'red')) +
geom_density_ridges())
ggplot(viral_counts, aes(x = log2_TPM, y = Density, fill = 'red')))
ggplot(viral_counts, aes(x = log2_TPM, y = Density, fill = 'red'))
ggplot(viral_counts,aes(x=log2_TPM,y=Density))+geom_line()+geom_ribbon(aes(ymin=0,ymax=viral_counts$Density,fill=viral_counts$ViralTranscription))
ggplot(viral_counts,aes(x=log2_TPM,y=Density))
ggplot(viral_counts,aes(x=log2_TPM,y=Density)+geom_line())
ggplot(viral_counts,aes(x=log2_TPM,y=Density))+geom_line())
ggplot(viral_counts,aes(x=log2_TPM,y=Density))+geom_line()
density(hspc@data["HIV",],from=0,to=max(hspc@data["HIV",]))
hspc@data['HIV', ]
plot(hspc@data['HIV', ])
?density
density(hspc@data["HIV",],from=0,to=max(hspc@data["HIV",]))
density(hspc@data["HIV",],from=0,to=max(hspc@data["HIV",]))$x
density(hspc@data["HIV",],from=0,to=max(hspc@data["HIV",]))
dim(density(hspc@data["HIV",],from=0,to=max(hspc@data["HIV",])))
density(hspc@data["HIV",],from=0,to=max(hspc@data["HIV",]))
density(hspc@data["HIV",],from=0,to=max(hspc@data["HIV",]))$x
dim(density(hspc@data["HIV",],from=0,to=max(hspc@data["HIV",])))
density(hspc@data["HIV",],from=0,to=max(hspc@data["HIV",]))
hspc@data
dim(hspc@data)
hspc@data
all = data.frame(hspc@data)
all = data.frame(
hspc@data)
all = hspc@data
View(all)
all
all@i
all@p
split(all)
View(viral_counts)
split(all, viral_counts@ViralTranscription)
split(all, viral_counts@ViralTranscription)
split(viral_counts, viral_counts@ViralTranscription)
View(hspc)
hspc@meta.data[["nGene"]]
hspc@data["HIV",]
density(hspc@data["HIV",])
AddMetaData(object = hspc, metadata = log2_TPM, col.name = "log2_TPM")
View(hspc)
View(hspc)
AddMetaData(object = hspc, metadata = viral_counts$ViralTranscription, col.name = "HIV_expression")
hspc <- AddMetaData(object = hspc, metadata = viral_counts$ViralTranscription, col.name = "HIV_expression")
View(hspc)
hspc@meta.data
viral_counts$ViralTranscription
?AddMetaData
library(Seurat)#v2.3.4
library(dplyr)
library(hdf5r)
library(ggplot2)
hspc = readRDS('HSPC_pilot_MV.rds')
mid_thresh=3.5
log2_TPM = density(hspc@data["HIV",],from=0,to=max(hspc@data["HIV",]))$x #4294 obs
Density = density(hspc@data["HIV",],from=0,to=max(hspc@data["HIV",]))$y
ViralTranscription = rep(c("Low","High"),length(log2_TPM)/2)
viral_counts = data.frame(log2_TPM,Density,ViralTranscription)
viral_counts$ViralTranscription[log2_TPM <= mid_thresh]="Low"
viral_counts$ViralTranscription[log2_TPM > mid_thresh]="High"
save.image("~/Desktop/Project/data/Rdata.RData")
View(viral_counts)
density(hspc@data["HIV",],from=0,to=max(hspc@data["HIV",]))
View(hspc)
setwd("~/Desktop/Project/data")
library(Seurat)#v2.3.4
library(dplyr)
library(hdf5r)
library(ggplot2)
hspc = readRDS('pbmc.rds')
View(hspc)
hspc = readRDS('HSPC_pilot_MV.rds')
View(hspc)
load("/Users/anbyew/Desktop/Project/data/Rdata.RData")
View(hspc)
View(hspc)
rm(hspc)
hspc = readRDS('HSPC_pilot_MV.rds')
Matrix::colSums(hspc@data["HIV",])
hspc@data["HIV",]
density(hspc@data["HIV",])
density(hspc@data["HIV",])$y
density(hspc@data["HIV",])$x
?density
sum(density(hspc@data["HIV",])$y)
density(hspc@data["HIV",])$x
plot(density(hspc@data["HIV",])$x)
hist(density(hspc@data["HIV",])$x)
density(hspc@data["HIV",])
hist(density(hspc@data["HIV",]))
plot(density(hspc@data["HIV",]))
?hist
hist(hspc@data["HIV",])
hist(hspc@data["HIV",], breaks=15)
hist(hspc@data["HIV",], breaks=10)
hist(hspc@data["HIV",], breaks=20)
hist(hspc@data["HIV",], breaks=50)
hist(hspc@data["HIV",], breaks=80)
hist(hspc@data["HIV",]<0, breaks=80)
hist(hspc@data["HIV",], from=0,to=max(hspc@data["HIV",], breaks=80)
)
hist(hspc@data["HIV",], from=0,to=max(hspc@data["HIV",]), breaks=80)
hspc@data["HIV",], from=0,to=max(hspc@data["HIV",])
dim(hspc@data["HIV",], from=0,to=max(hspc@data["HIV",]))
hist(hspc@data["HIV",], from=0,to=max(hspc@data["HIV",]), breaks=80)
hist(hspc@data["HIV",], breaks=80)
hist(hspc@data["HIV",], breaks=100)
hist(hspc@data["HIV",], breaks=10)
hist(hspc@data["HIV",], breaks=100)
max(hspc@data["HIV",])
min(hspc@data["HIV",])
max(density(hspc@data["HIV",],from=0,to=max(hspc@data["HIV",]))$x)
min(density(hspc@data["HIV",],from=0,to=max(hspc@data["HIV",]))$x)
min(density(hspc@data["HIV",]$x)
)
min(density(hspc@data["HIV",])$x)
plot(density(hspc@data["HIV",]))
plot(density(hspc@data["HIV",],from=0,to=max(hspc@data["HIV",])))
hist(hspc@data["HIV",], breaks=100)
hist(hspc@data["HIV",], breaks=200)
hist(hspc@data["HIV",], breaks=250)
hist(hspc@data["HIV",], breaks=100)
hspc@data["HIV",],from=0,to=max(hspc@data["HIV",])
(hspc@data["HIV",],from=0,to=max(hspc@data["HIV",]))
hspc@data["HIV",]
hspc@data["HIV",] > 3.5
type(hspc@data)
typeof(hspc@data)
hspc@data
mtx = hspc@data[hspc@data["HIV",] < 3.5]
mtx
rm(mtx)
?sample
hspc@data["HIV",] < 3.5
infected <- hspc@data["HIV",] < 3.5
hspc <- AddMetaData(object = hspc, metadata = infected, col.name = "infected")
View(hspc)
hspc.list <- SplitObject(hspc, attribute.1 = "infected")
View(hspc.list)
save.image("~/Desktop/Project/data/Rdata.RData")
View(hspc.list)
saveRDS(hspc.list, file = "hspc.list.rds")
load("/Users/anbyew/Desktop/Project/data/Rdata.RData")
View(hspc)
hspc <- JackStraw(object = hspc, num.replicate = 100)
hspc <- ScoreJackStraw(object = hspc, dims = 1:20)
JackStrawPlot(object = hspc, dims = 1:15)
JackStrawPlot(object = hspc)
ElbowPlot(object = hspc)
hspc <- FindNeighbors(object = hspc, dims = 1:10)
hspc <- FindClusters(object = hspc, resolution = 0.5)
head(x = Idents(object = hspc), 5)
hspc <- RunUMAP(object = hspc, dims = 1:10)
DimPlot(object = hspc, reduction = "umap")
hspc <- FindClusters(object = hspc, reduction.type = "pca", dims.use = 1:20, #1:10
resolution = 1, print.output = 0, save.SNN = TRUE)####0.6
PrintFindClustersParams(object = hspc)
hspc <- RunTSNE(object = hspc, dims.use = 1:20, do.fast = TRUE)
TSNEPlot(object = hspc)
?FindClusters
hspc.list$TRUE@data
hspc.list$TRUE
View(hspc.list)
hspc.list[1]
typeof(hspc.list[1])
typeof(hspc.list[2])
typeof(hspc.list['TRUE'])
typeof(hspc.list[['TRUE']])
hspc.list[['TRUE']]@data
hspc <- FindClusters(object = hspc, reduction.type = "pca", dims.use = 1:10, #1:10
resolution = 1, print.output = 0, save.SNN = TRUE)####0.6
PrintFindClustersParams(object = hspc)
hspc <- RunTSNE(object = hspc, dims.use = 1:10, do.fast = TRUE)#20
TSNEPlot(object = hspc)
hspc <- RunTSNE(object = hspc, dims.use = 1:20, do.fast = TRUE)#20
TSNEPlot(object = hspc)
hspc <- RunTSNE(object = hspc, dims.use = 1:10, do.fast = TRUE)#20
TSNEPlot(object = hspc)
FeaturePlot(object=hspc, features.plot=c("mCherry"), cols.use=c("pink", "red"),
reduction.use="tsne", do.return=T)
FeaturePlot(object=hspc, features.plot=c("PROM1"), cols.use=c("lightblue", "blue"),
reduction.use="tsne", do.return=T)
FeaturePlot(object=hspc, features.plot=c("HIV"), cols.use=c("yellow", "orange"),
reduction.use="tsne", do.return=T)
hist(hspc@data["mCherry",])
head(x = Idents(object = hspc), 5)
?identify
?identify(hspc)
identify(hspc)
hspc@ident
typeof(hspc@ident)
clusterlb <- hspc@ident
clusterlb <- c(hspc@ident)
hspc <- AddMetaData(object = hspc, metadata = clusterlb, col.name = "classlb")
View(hspc)
hspc.list <- SplitObject(hspc, attribute.1 = "infected")
saveRDS(hspc.list, file = "hspc.list.rds")
saveRDS(hspc, file = "hspc2.rds")
save.image("~/Desktop/Project/data/Rdata.RData")
cluster1.markers <- FindMarkers(object = hspc, ident.1 = 1, min.pct = 0.1)
print(x = head(x = cluster1.markers, n = 5))
print(x = head(x = cluster1.markers, n = 10))
cluster2.markers <- FindMarkers(object = hspc, ident.1 = 2, min.pct = 0.1)
print(x = head(x = cluster2.markers, n = 5))
?TSNEPlot
TSNEPlot(object = hspc, do.label=TRUE)
TSNEPlot(object = hspc, do.label=TRUE, label.size=6)
rm(cluster1.markers)
rm(cluster2.markers)
cluster0.markers <- FindMarkers(object = hspc, ident.2 = 0,
ident.2 = c(2,3,4,5,7,8,9,11,12,13,14,15),
min.pct = 0.1)
cluster0.markers <- FindMarkers(object = hspc, ident.1 = 0,
ident.2 = c(2,3,4,5,7,8,9,11,12,13,14,15),
min.pct = 0.1)
View(cluster0.markers)
hspc@meta.data$infected
tp = hspc@meta.data$infected
tp = (hspc@meta.data$infected == TRUE)*1
tpmx = c(1, tp)
rm(tpmx)
tp2 = vector("list", 1)
View(tp2)
tp2 = vector("list", 1, 1000)
?list
rm(tp2)
list(10)
list(10,10)
vector("list", 10)
tpp = vector("list", 4294)
tpp = 1
tpp = vector("list", 4294, 1)
tpp = vector("list", 4294)
View(tpp)
tpp = (tpp == NULL)*1
tpp == Null
list(1)
list(1, 100)
model.matrix(~1 + tp)
model.matrix(~1 + tp)
rm(tp)
rm(tpp)
View(cluster0.markers)
cluster1.markers <- FindMarkers(object = hspc, ident.1 = 1,
ident.2 = c(2,3,4,5,7,8,9,11,12,13,14,15),
min.pct = 0.1)
cluster6.markers <- FindMarkers(object = hspc, ident.1 = 6,
ident.2 = c(2,3,4,5,7,8,9,11,12,13,14,15),
min.pct = 0.1)
cluster10.markers <- FindMarkers(object = hspc, ident.1 = 10,
ident.2 = c(2,3,4,5,7,8,9,11,12,13,14,15),
min.pct = 0.1)
View(cluster1.markers)
View(cluster6.markers)
View(cluster10.markers)
hspc.markers <- FindAllMarkers(object = hspc, only.pos = TRUE, min.pct = 0.25,
thresh.use = 0.25)
View(hspc.markers)
hspc.markers['HIV']
hspc.markers['NPM1']
hspc.markers['NPM1',]
hspc.markers['HIV',]
hspc.markers['mCherry',]
save.image("~/Desktop/Project/data/Rdata.RData")
FindMarkers(object = hspc, ident.1 = 0,
ident.2 = c(2,3,4,5,7,8,9,11,12,13,14,15), thresh.use = 0.1,
test.use = "roc", only.pos = TRUE)
View(cluster0.markers)
cluster0.markers <- FindMarkers(object = hspc, ident.1 = 0,
ident.2 = c(2,3,4,5,7,8,9,11,12,13,14,15),
min.pct = 0)
View(cluster0.markers)
cluster0.markers <- FindMarkers(object = hspc, ident.1 = 0,
ident.2 = c(2,3,4,5,7,8,9,11,12,13,14,15),
min.pct = 0.1)
View(cluster0.markers)
View(cluster1.markers)
View(cluster10.markers)
View(cluster6.markers)
VlnPlot(object = hspc, features.plot = c("HOPX", "CD34"))
VlnPlot(object = hspc, features.plot = c("C1QTNF4", "PROM1"))
VlnPlot(object = hspc, features.plot = c("CLDN10", "SPINK2"))
VlnPlot(object = hspc, features.plot = c("HIV", "mCherry"))
FeaturePlot(object = hspc, features.plot = c("HOPX", "CD34", "C1QTNF4", "PROM1",
"CLDN10", "SPINK2"),
cols.use = c("grey", "blue"),
reduction.use = "tsne")
FeaturePlot(object = hspc, features.plot = c("HIV", "mCherry", "PROM1", "CD34"),
cols.use = c("grey", "blue"),
reduction.use = "tsne")
FeaturePlot(object = hspc, features.plot = c("HOPX", "CD34", "C1QTNF4", "PROM1",
"CLDN10", "SPINK2", "HIV", "mCherry"),
cols.use = c("grey", "blue"),
reduction.use = "tsne")
FeaturePlot(object = hspc, features.plot = c("IFITM1"),
cols.use = c("grey", "blue"),
reduction.use = "tsne")
?FindAllMarkers
FeaturePlot(object = hspc, features.plot = c("GFP"),
cols.use = c("grey", "blue"),
reduction.use = "tsne")
FeaturePlot(object = hspc, features.plot = c("LMNA"),
cols.use = c("grey", "blue"),
reduction.use = "tsne")
FeaturePlot(object = hspc, features.plot = c("HOPX", "CD34", "C1QTNF4",
"PROM1", "CLDN10", "SPINK2",
"HIV", "mCherry", "LMNA"),
cols.use = c("grey", "blue"),
reduction.use = "tsne")
FeaturePlot(object = hspc, features.plot = c("C1QTNF4", "HOPX", "CD34",
"SPINK2", "PROM1", "CLDN10",
"HIV", "mCherry", "LMNA"),
cols.use = c("grey", "blue"),
reduction.use = "tsne")
save.image("~/Desktop/Project/data/Rdata.RData")
View(hspc)
View(hspc)
View(hspc.list)
View(hspc)
View(hspc.list)
View(cluster6.markers)
hspc$data
hspc@data
hspc@data[1:5,1:%]
hspc@data[1:5,1:5]
hspc@data[5:15,5:15]
hspc@data[var.genes]
hspc@data[hspc@data$var.genes]
hspc@data@var.genes
hspc@var.genes
hspc@data[hspc@var.genes]
typeof(hspc@var.genes)
typeof(hspc@var.genes[0])
hspc@data[hspc@var.genes,]
topGenes = subset(x = hspc, subset = hspc@var.genes)
hspc@ident
hspc@is.expr
hspc@kmeans
hspc@data@i
hspc@meta.data
view(hspc@meta.data)
View(hspc@meta.data)
hspc@data[1:5,1:%]
hspc@data[1:5,1:5]
hspc3000 = hspc
View(hspc3000)
hspc3000@data = hspc3000@data[hspc3000@var.genes,]
View(hspc3000)
hspc3000@data[1:5,1:%]
hspc3000@data[1:5,1:5]
hspc3000@meta.data
saveRDS(hspc3000, file = "hspc3000.rds")
save.image("~/Desktop/Project/data/Rdata.RData")
View(cluster0.markers)
View(cluster1.markers)
View(hspc)
write.table(cluster0.markers, file = "c1.txt", sep = "\t",
row.names = TRUE, col.names = NA)
row.names(cluster0.markers)
write.table(row.names(cluster0.markers), file = "c1.txt", sep = "\t",
row.names = TRUE, col.names = NA)
write.table(row.names(cluster0.markers), file = "c1.txt", sep = "\t",
row.names = FALSE, col.names = NA)
write.table(row.names(cluster0.markers), file = "c1.txt", sep = "\t",
row.names = NA, col.names = NA)
write.table(row.names(cluster0.markers), file = "c1.txt", sep = "\t",
row.names = NA, col.names = NA)
write.table(row.names(cluster0.markers), file = "c1.txt", sep = "\t")
?write.table
write.table(row.names(cluster0.markers), file = "c1.txt", sep = "\t",
row.names = FALSE, col.names = FALSE)
write.table(noquote(row.names(cluster0.markers)), file = "c1.txt", sep = "\t",
row.names = FALSE, col.names = FALSE)
noquote(row.names(cluster0.markers))
write.table(noquote(row.names(cluster0.markers)), file = "c1.txt", sep = "\t",
row.names = FALSE, col.names = FALSE)
write.table(row.names(cluster0.markers), file = "c1.txt", sep = "\t",
row.names = FALSE, col.names = FALSE, quote=FALSE)
write.table(row.names(cluster0.markers), file = "c0.txt", sep = "\t",
row.names = FALSE, col.names = FALSE, quote=FALSE)
write.table(row.names(cluster1.markers), file = "c1.txt", sep = "\t",
row.names = FALSE, col.names = FALSE, quote=FALSE)
write.table(row.names(cluster10.markers), file = "c10.txt", sep = "\t",
row.names = FALSE, col.names = FALSE, quote=FALSE)
write.table(row.names(cluster6.markers), file = "c6.txt", sep = "\t",
row.names = FALSE, col.names = FALSE, quote=FALSE)
cluster0.markers[p_val_adj < 0.05]
View(cluster10.markers)
View(cluster6.markers)
cluster0.markers["ADA",]
cluster0.markers["HIV",]
cluster1.markers["HIV",]
cluster10.markers["HIV",]
cluster6.markers["HIV",]
cluster6.markers["mCherry",]
cluster10.markers["mCherry",]
cluster1.markers["mCherry",]
cluster0.markers["mCherry",]
cluster0.markers[,"p_val_adj"]
cluster0.markers[cluster0.markers[,"p_val_adj"]>0.05]
cluster0.markers[cluster0.markers[,"p_val_adj"]>0.05]
cluster0.markers[,cluster0.markers[,"p_val_adj"]>0.05]
cluster0.markers[cluster0.markers[,"p_val_adj"]>0.05,]
cluster0.markers[cluster0.markers[,"p_val_adj"]<0.05,]
write.table(row.names(cluster0.markers[cluster0.markers[,"p_val_adj"]<0.05,]), file = "c0.txt", sep = "\t",
row.names = FALSE, col.names = FALSE, quote=FALSE)
write.table(row.names(cluster0.markers[cluster0.markers[,"p_val_adj"]<0.05,]), file = "c0.txt", sep = "\t",
row.names = FALSE, col.names = FALSE, quote=FALSE)
write.table(row.names(cluster1.markers[cluster1.markers[,"p_val_adj"]<0.05,]), file = "c1.txt", sep = "\t",
row.names = FALSE, col.names = FALSE, quote=FALSE)
write.table(row.names(cluster10.markers[cluster10.markers[,"p_val_adj"]<0.05,]), file = "c10.txt", sep = "\t",
row.names = FALSE, col.names = FALSE, quote=FALSE)
write.table(row.names(cluster6.markers[cluster6.markers[,"p_val_adj"]<0.05,]), file = "c6.txt", sep = "\t",
row.names = FALSE, col.names = FALSE, quote=FALSE)
