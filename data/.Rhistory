x = 1
ls
ls()
getwd()
library()
grp1<-matrix(rnorm(400,0),  nrow=100,ncol=4)
grp2<-matrix(rnorm(400,0.5),nrow=100,ncol=4
)
View(grp1)
View(grp2)
results<-NA
for (i in 1:100) {
results[i]<-t.test(grp1[i,],grp2[i,])$p.value
}
ckear
clera
clear
rm(list = ls())
library(affy)
install.packages('affy')
install.packages('GEOquery')
geo.data<-getGEO(GEO="GDS5309")
install.packages('affy')
qnorm
?qnorm
a <- c(1:3)
a
len(a)
length(a)
?fisher.test
matrix(1:4, nrow = 2, ncol = 2)
mx = matrix(8, 292, 52, 23648)
mx
matrix(1:4, nrow = 2, ncol = 2)
rm mx
rm(mx)
mx = matrix(c(8,292,52,23648),2,2).]
mx = matrix(c(8,292,52,23648),2,2)
mx
mx = matrix(c(8,52, 292,23648),2,2)
mx
fisher.test(mx)
install.packages(GO.db)
x = matrix((8,52,292,23648),2,2)
x = matrix(c(8,52,292,23648),2,2)
fisher.test(x)
x = matrix(c(8,52,292,23648-400),2,2)
fisher.test(x)
x = matrix(c(8,52,292,23648-4000),2,2)
fisher.test(x)
library(GenomicRanges)
?cor
?qnorm
z = c(1,2,3)
z^1
z^2
median(z)
rm(list=ls())
setwd("~/Desktop/Project/data")
hspc = readRDS('hspc3000.rds')
View(hspc)
View(hspc)
type(hspc)
typeof(hspc)
cluster0.markers <- FindMarkers(object = hspc, ident.1 = 0,
ident.2 = c(2,3,4,5,7,8,9,11,12,13,14,15),
min.pct = 0.1)
hspc@ident
cluster0.markers <- FindMarkers(object = hspc, ident.1 = c(0,1),
ident.2 = c(2,3,4,5,7,8,9,11,12,13,14,15),
min.pct = 0.1)
library(Seurat)#v2.3.4
library(dplyr)
library(hdf5r)
View(hspc.markers)
highlow.markers <- FindMarkers(object = pbmc, ident.1 = c(0,1,6,10),
ident.2 = c(2,3,4,5,7,8,9,11,12,13,14,15),
min.pct = 0.25)
highlow.markers <- FindMarkers(object = hspc, ident.1 = c(0,1,6,10),
ident.2 = c(2,3,4,5,7,8,9,11,12,13,14,15),
min.pct = 0.25)
View(highlow.markers)
highlow.markers[highlow.markers$p_val < 0.05]
highlow.markers$p_val_adj
highlow.markers$p_val_adj<0.05
length(highlow.markers$p_val_adj<0.05)
length(highlow.markers$p_val_adj>0.05)
length(highlow.markers$p_val_adj<0.05 == TRUE)
length((highlow.markers$p_val_adj<0.05) == TRUE)
highlow.markers[highlow.markers$p_val_adj<0.05]
highlow.markers[highlow.markers$p_val_adj<0.05,]
length(highlow.markers[highlow.markers$p_val_adj<0.05,])
length(highlow.markers[highlow.markers$p_val_adj>0.05,])
highlow.markers[highlow.markers$p_val_adj>0.05,]
highlow.markers[highlow.markers$p_val_adj<0.05,]
highlow.markers[highlow.markers$p_val_adj<0.05,1]
length(highlow.markers[highlow.markers$p_val_adj<0.05,1])
FeaturePlot(object = hspc, features.plot = c("C1QTNF4", "SPINK2", "EGFL7", "C19orf77",
"HOPX", "CLDN10"),
cols.use = c("grey", "blue"),
reduction.use = "tsne")
FeaturePlot(object = hspc, features.plot = c("C1QTNF4", "SPINK2", "EGFL7", "C19orf77",
"HOPX", "CLDN10", "HIV", "mCherry", "LMNA"),
cols.use = c("grey", "blue"),
reduction.use = "tsne")
VlnPlot(object = hspc, features.plot = c("C1QTNF4", "SPINK2", "EGFL7", "C19orf77",
"HOPX", "CLDN10"))
highlow.markers['PNMT']
highlow.markers['PNMT',]
highlow.markers['HOPX',]
highlow.markers['FAM178B',]
highlow.markers['NEAT1',]
highlow.markers['LGALS1',]
highlow.markers['MYC',]
highlow.markers['MS4A6A',]
highlow.markers['ACY3',]
highlow.markers['MPEG1',]
highlow.markers['CLU',]
highlow.markers['C1QTNF4',]
highlow.markers['SAT1',]
highlow.markers['CKB',]
highlow.markers['HBD',]
highlow.markers['TYROBP',]
highlow.markers['PRSS57',]
highlow.markers['CES1',]
highlow.markers['FABP5',]
highlow.markers['HMGB1',]
highlow.markers['DMTN',]
highlow.markers <- FindMarkers(object = hspc, ident.1 = c(0,1,4,6,10),
ident.2 = c(2,3,5,7,8,9,11,12,13,14,15),
min.pct = 0.25)
highlow.markers[highlow.markers$p_val_adj>0.05,]#180 genes
length(highlow.markers[highlow.markers$p_val_adj>0.05,1])
View(highlow.markers)
View(highlow.markers)
highlow.markers['PNMT',]
highlow.markers['HOPX',]
highlow.markers['FAM178B',]
highlow.markers['NEAT1',]
highlow.markers['LGALS1',]
highlow.markers['MYC',]
highlow.markers['MS4A6A',]
highlow.markers['ACY3',]
highlow.markers['MPEG1',]
highlow.markers['CLU',]
highlow.markers['C1QTNF4',]
highlow.markers['SAT1',]
highlow.markers['CKB',]
highlow.markers['HBD',]
highlow.markers['TYROBP',]
highlow.markers['PRSS57',]
highlow.markers['CES1',]
highlow.markers['FABP5',]
highlow.markers['HMGB1',]
highlow.markers['DMTN',]
length(highlow.markers[highlow.markers$p_val_adj<0.05,1])
lowhigh.markers <- FindMarkers(object = hspc, ident.1 = c(2,3,5,7,8,9,11,12,13,14,15),
ident.2 = c(0,1,4,6,10),
min.pct = 0.25)
lowhigh.markers[lowhigh.markers$p_val_adj<0.05,]#
length(lowhigh.markers[lowhigh.markers$p_val_adj<0.05,1])
View(lowhigh.markers)
lowhigh.markers['FABP5',]
lowhigh.markers['HMGB1',]
lowhigh.markers['DMTN',]
write.table(row.names(highlow.markers[highlow.markers[,"p_val_adj"]<0.05,]), file = "highlow.txt", sep = "\t",
row.names = FALSE, col.names = FALSE, quote=FALSE)
write.table(row.names(lowhigh.markers[lowhigh.markers[,"p_val_adj"]<0.05,]), file = "lowhigh.txt", sep = "\t",
row.names = FALSE, col.names = FALSE, quote=FALSE)
write.csv(highlow.markers, file = "highlow.markers.csv")
write.csv(highlow.markers, file = "highlow.markers.csv")
write.csv(lowhigh.markers, file = "lowhigh.markers.csv")
highlow.markers.head(5)
head(highlow.markers)
rownames(highlow.markers)
head(rownames(highlow.markers))
head(rownames(highlow.markers), 10)
load("/Users/anbyew/Desktop/Project/data/Rdata.RData")
View(hspc)
?NormalizeData
?RunPCA
unique RNA copies
ggplot(viral_counts,aes(x=log2_TPM,y=Density))+geom_line()+
geom_ribbon(aes(ymin=0,ymax=viral_counts$Density,fill=viral_counts$ViralTranscription))
?ggplot
View(hspc.list)
ggplot(viral_counts,aes(x=log2_TPM,y=Density))+geom_line()+
geom_ribbon(aes(ymin=0,ymax=viral_counts$Density,fill=viral_counts$ViralTranscription))+
xlab("log2['HIV' Expression]") +
ylab("Density")+
guides(fill=guide_legend(title="HIV Transcription Level"))
ggplot(viral_counts,aes(x=log2_TPM,y=Density))+geom_line()+
geom_ribbon(aes(ymin=0,ymax=viral_counts$Density,fill=viral_counts$ViralTranscription))+
xlab("log2['HIV' Expression]") +
ggtitle("HIV Transcription Level")+
guides(fill=guide_legend(title=None))
ggplot(viral_counts,aes(x=log2_TPM,y=Density))+geom_line()+
geom_ribbon(aes(ymin=0,ymax=viral_counts$Density,fill=viral_counts$ViralTranscription))+
xlab("log2['HIV' Expression]") +
ggtitle("HIV Transcription Level")+
guides(fill=guide_legend(title=""))
