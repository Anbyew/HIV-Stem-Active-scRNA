x = 1
ls
ls()
getwd()
library()
grp1<-matrix(rnorm(400,0),  nrow=100,ncol=4)
grp2<-matrix(rnorm(400,0.5),nrow=100,ncol=4
)
View(grp1)
View(grp2)
results<-NA
for (i in 1:100) {
results[i]<-t.test(grp1[i,],grp2[i,])$p.value
}
ckear
clera
clear
rm(list = ls())
library(affy)
install.packages('affy')
install.packages('GEOquery')
geo.data<-getGEO(GEO="GDS5309")
install.packages('affy')
qnorm
?qnorm
a <- c(1:3)
a
len(a)
length(a)
?fisher.test
matrix(1:4, nrow = 2, ncol = 2)
mx = matrix(8, 292, 52, 23648)
mx
matrix(1:4, nrow = 2, ncol = 2)
rm mx
rm(mx)
mx = matrix(c(8,292,52,23648),2,2).]
mx = matrix(c(8,292,52,23648),2,2)
mx
mx = matrix(c(8,52, 292,23648),2,2)
mx
fisher.test(mx)
install.packages(GO.db)
x = matrix((8,52,292,23648),2,2)
x = matrix(c(8,52,292,23648),2,2)
fisher.test(x)
x = matrix(c(8,52,292,23648-400),2,2)
fisher.test(x)
x = matrix(c(8,52,292,23648-4000),2,2)
fisher.test(x)
library(GenomicRanges)
?cor
rm(list=ls())
setwd("~/Desktop/Project/data")
pbmc = readRDS("HSPC_pilot_MV.rds", refhook = NULL)
library(Seurat)#v2.3.4
library(dplyr)
library(hdf5r)
View(pbmc)
pbmc = load("HSPC_pilot_MV.rds")
pbmc = readRDS("HSPC_pilot_MV.rds")
View(pbmc)
save.image("~/Desktop/Project/data/Rdata.RData")
FeaturePlot(object=pbmc, features.plot=c("mCherry"), cols.use=c("pink", "red"), reduction.use="tsne", do.return=T)
FeaturePlot(object=pbmc, features.plot=c("PROM1"), cols.use=c("lightblue", "blue"),
reduction.use="tsne", do.return=T)
FeaturePlot(object=pbmc, features.plot=c("mCherry"), cols.use=c("pink", "red"),
reduction.use="tsne", do.return=T)
FeaturePlot(object=pbmc, features.plot=c("mCherry"), cols.use=c("blue", "red"),
reduction.use="tsne", do.return=T)
FeaturePlot(object=pbmc, features.plot=c("mCherry"), cols.use=c("green", "red"),
reduction.use="tsne", do.return=T)
FeaturePlot(object=pbmc, features.plot=c("mCherry"), cols.use=c("yellow", "black"),
reduction.use="tsne", do.return=T)
FeaturePlot(object=pbmc, features.plot=c("mCherry"), cols.use=c("pink", "red"),
reduction.use="tsne", do.return=T)
pbmc("mCherry")
pbmc@var.genes
pbmc@var.genes["mCherry"]
pbmc["mCherry"]
pbmc@data["mCherry"]
pbmc@data[1:5,1:5]
pbmc@data["mCherry",]
hist(pbmc@data["mCherry",])
plot(pbmc@data["mCherry",])
hist(pbmc@data["mCherry",])
hist(log2(pbmc@data["mCherry",]))
hist(pbmc@data["mCherry",])
hist(pbmc@scale.data["mCherry",])
library(ggplot2)
ggplot(pbmc@data["mCherry",])
ggplot(density(pbmc@data["mCherry",]))
hist(log2(pbmc@data["mCherry",]))
hist(density(log2(pbmc@data["mCherry",])))
plot(density(log2(pbmc@data["mCherry",])))
ggplot(pbmc@data)
ggplot(pbmc@data[1:5,1:5])
plot(density(log2(pbmc@data["HIV",])))
plot(density(pbmc@data["HIV",]))
FeaturePlot(object=pbmc, features.plot=c("PROM1"), cols.use=c("lightblue", "blue"),
reduction.use="tsne", do.return=T)
TSNEPlot(object = pbmc)
FindClusters(object = pbmc, reduction.type = "pca", dims.use = 1:20, #1:10
resolution = 1, print.output = 0, save.SNN = TRUE)####0.6
pbmc2 <- FindClusters(object = pbmc, reduction.type = "pca", dims.use = 1:20, #1:10
resolution = 1, print.output = 0, save.SNN = TRUE)####0.6
pbmc2 <- FindClusters(object = pbmc, reduction.type = "pca", dims.use = 1:20, #1:10
resolution = 1, print.output = 0, save.SNN = TRUE)####0.6
PrintFindClustersParams(object = pbmc2)
pbmc2 <- RunTSNE(object = pbmc2, dims.use = 1:10, do.fast = TRUE)
TSNEPlot(object = pbmc2)
pbmc2 <- RunTSNE(object = pbmc2, dims.use = 1:20, do.fast = TRUE)
TSNEPlot(object = pbmc2)
pbmc2 <- FindClusters(object = pbmc, reduction.type = "pca", dims.use = 1:20, #1:10
resolution = 1, print.output = 0, save.SNN = TRUE)####0.6
PrintFindClustersParams(object = pbmc2)
plot(density(pbmc2@data["HIV",]))
setwd("~/Desktop/Project/data")
library(Seurat)#v2.3.4
library(dplyr)
library(hdf5r)
readRDS('HSPC_pilot_MV.rds')
mid_thresh=3.5
hspc = readRDS('HSPC_pilot_MV.rds')
log2_TPM = density(hspc@data["HIV",],from=0,to=max(hspc@data["HIV",]))$x
Density = density(hspc@data["HIV",],from=0,to=max(hspc@data["HIV",]))$y
ViralTranscription = rep(c("Low","High"),length(log2_TPM)/2)
viral_counts = data.frame(log2_TPM,Density,ViralTranscription)
viral_counts$ViralTranscription[log2_TPM <= mid_thresh]="Low"
viral_counts$ViralTranscription[log2_TPM > mid_thresh]="High"
View(viral_counts)
View(hspc)
View(viral_counts)
View(viral_counts)
plot(log2_TPM, density)
plot(log2_TPM, Density)
plot(density(pbmc2@data["HIV",]))
plot(density(hspc@data["HIV",]))
plot(density(hspc@data["mCherry",]))
plot(density(hspc@data["HIV",]))
?plot
plot(density(hspc@data["HIV",])col = "red")
plot(density(hspc@data["HIV",]), col = "red")
plot(density(hspc@data["HIV",]), cl = "red")
plot(density(hspc@data["HIV",]), col = "red")
plot(density(hspc@data["HIV",]), col = "red", fill="red")
library(ggplot2)
ggplot(density(hspc@data["HIV",]), aes(colour="red", fill="red"))
ggplot(log2_TPM, density, aes(colour="red", fill="red"))
ggplot(log2_TPM, density, colour="red", fill="red")
ggplot?
?
.
?ggplot
ggplot(aes(log2_TPM, density, colour="red", fill="red"))
ggplot(hspc@data, aes(log2_TPM, density, colour="red", fill="red"))
4
5
6
7
8
9
10
11
12
# library
library(ggridges)
library(ggplot2)
# Data
head(diamonds)
# basic example
ggplot(diamonds, aes(x = price, y = cut, fill = cut)) +
geom_density_ridges() +
theme_ridges() +
theme(legend.position = "none")
diamonds
hspc@data
ggplot(diamonds, aes(x = price, y = cut, fill = cut)) +
geom_density_ridges() +
theme_ridges() +
theme(legend.position = "none")
ggplot(hspc@data, aes(x=log2_TPM, y=density, fill="red"))
ggplot(fortify(hspc@data), aes(x=log2_TPM, y=density, fill="red"))
ggplot(hspc@data)
ggplot(Density)
ggplot(Density)
ggplot(Density, log2_TPM)
df = as.data.frame(hspc@data)
View(viral_counts)
View(hspc)
View(viral_counts)
hspc@data["HIV",]
shape(hspc@data["HIV",])
hspc@data["HIV",]
hspc@data["HIV",].shaoe
hspc@data["HIV",].shape
hspc@data["HIV",].shape()
hspc@data["HIV",]
hist(hspc@data["HIV",])
plot(density(pbmc2@data["HIV",]))
plot(density(hspc@data["HIV",]))
plot(density(hspc@data["HIV",]),from=0,to=max(hspc@data["HIV",]))
plot(density(hspc@data["HIV",]),from=0,to=max(hspc@data["HIV",]))
plot(density(hspc@data["HIV",]),from=0,to=max(hspc@data["HIV",])))
plot(density(hspc@data["HIV",]),from=0,to=max(hspc@data["HIV",]))
View(viral_counts)
ggplot(viral_counts)
ggplot(viral_counts, aes(x=log2_TPM, y=Density))
ggplot(viral_counts, aes(x=log2_TPM, y=Density, fill='red'))
ggplot(diamonds, aes(x = log2_TPM, y = Density, fill = 'red')) +
geom_density_ridges() +
theme_ridges() +
theme(legend.position = "none")
ggplot(viral_counts, aes(x = log2_TPM, y = Density, fill = 'red')) +
geom_density_ridges() +
theme_ridges())
ggplot(viral_counts, aes(x = log2_TPM, y = Density, fill = 'red')) +
geom_density_ridges())
ggplot(viral_counts, aes(x = log2_TPM, y = Density, fill = 'red')))
ggplot(viral_counts, aes(x = log2_TPM, y = Density, fill = 'red'))
ggplot(viral_counts,aes(x=log2_TPM,y=Density))+geom_line()+geom_ribbon(aes(ymin=0,ymax=viral_counts$Density,fill=viral_counts$ViralTranscription))
ggplot(viral_counts,aes(x=log2_TPM,y=Density))
ggplot(viral_counts,aes(x=log2_TPM,y=Density)+geom_line())
ggplot(viral_counts,aes(x=log2_TPM,y=Density))+geom_line())
ggplot(viral_counts,aes(x=log2_TPM,y=Density))+geom_line()
density(hspc@data["HIV",],from=0,to=max(hspc@data["HIV",]))
hspc@data['HIV', ]
plot(hspc@data['HIV', ])
?density
density(hspc@data["HIV",],from=0,to=max(hspc@data["HIV",]))
density(hspc@data["HIV",],from=0,to=max(hspc@data["HIV",]))$x
density(hspc@data["HIV",],from=0,to=max(hspc@data["HIV",]))
dim(density(hspc@data["HIV",],from=0,to=max(hspc@data["HIV",])))
density(hspc@data["HIV",],from=0,to=max(hspc@data["HIV",]))
density(hspc@data["HIV",],from=0,to=max(hspc@data["HIV",]))$x
dim(density(hspc@data["HIV",],from=0,to=max(hspc@data["HIV",])))
density(hspc@data["HIV",],from=0,to=max(hspc@data["HIV",]))
hspc@data
dim(hspc@data)
hspc@data
all = data.frame(hspc@data)
all = data.frame(
hspc@data)
all = hspc@data
View(all)
all
all@i
all@p
split(all)
View(viral_counts)
split(all, viral_counts@ViralTranscription)
split(all, viral_counts@ViralTranscription)
split(viral_counts, viral_counts@ViralTranscription)
View(hspc)
hspc@meta.data[["nGene"]]
hspc@data["HIV",]
density(hspc@data["HIV",])
AddMetaData(object = hspc, metadata = log2_TPM, col.name = "log2_TPM")
View(hspc)
View(hspc)
AddMetaData(object = hspc, metadata = viral_counts$ViralTranscription, col.name = "HIV_expression")
hspc <- AddMetaData(object = hspc, metadata = viral_counts$ViralTranscription, col.name = "HIV_expression")
View(hspc)
hspc@meta.data
viral_counts$ViralTranscription
?AddMetaData
library(Seurat)#v2.3.4
library(dplyr)
library(hdf5r)
library(ggplot2)
hspc = readRDS('HSPC_pilot_MV.rds')
mid_thresh=3.5
log2_TPM = density(hspc@data["HIV",],from=0,to=max(hspc@data["HIV",]))$x #4294 obs
Density = density(hspc@data["HIV",],from=0,to=max(hspc@data["HIV",]))$y
ViralTranscription = rep(c("Low","High"),length(log2_TPM)/2)
viral_counts = data.frame(log2_TPM,Density,ViralTranscription)
viral_counts$ViralTranscription[log2_TPM <= mid_thresh]="Low"
viral_counts$ViralTranscription[log2_TPM > mid_thresh]="High"
save.image("~/Desktop/Project/data/Rdata.RData")
View(viral_counts)
density(hspc@data["HIV",],from=0,to=max(hspc@data["HIV",]))
View(hspc)
setwd("~/Desktop/Project/data")
library(Seurat)#v2.3.4
library(dplyr)
library(hdf5r)
library(ggplot2)
hspc = readRDS('pbmc.rds')
View(hspc)
hspc = readRDS('HSPC_pilot_MV.rds')
View(hspc)
load("/Users/anbyew/Desktop/Project/data/Rdata.RData")
View(hspc)
View(hspc)
rm(hspc)
hspc = readRDS('HSPC_pilot_MV.rds')
Matrix::colSums(hspc@data["HIV",])
hspc@data["HIV",]
density(hspc@data["HIV",])
density(hspc@data["HIV",])$y
density(hspc@data["HIV",])$x
?density
sum(density(hspc@data["HIV",])$y)
density(hspc@data["HIV",])$x
plot(density(hspc@data["HIV",])$x)
hist(density(hspc@data["HIV",])$x)
density(hspc@data["HIV",])
hist(density(hspc@data["HIV",]))
plot(density(hspc@data["HIV",]))
?hist
hist(hspc@data["HIV",])
hist(hspc@data["HIV",], breaks=15)
hist(hspc@data["HIV",], breaks=10)
hist(hspc@data["HIV",], breaks=20)
hist(hspc@data["HIV",], breaks=50)
hist(hspc@data["HIV",], breaks=80)
hist(hspc@data["HIV",]<0, breaks=80)
hist(hspc@data["HIV",], from=0,to=max(hspc@data["HIV",], breaks=80)
)
hist(hspc@data["HIV",], from=0,to=max(hspc@data["HIV",]), breaks=80)
hspc@data["HIV",], from=0,to=max(hspc@data["HIV",])
dim(hspc@data["HIV",], from=0,to=max(hspc@data["HIV",]))
hist(hspc@data["HIV",], from=0,to=max(hspc@data["HIV",]), breaks=80)
hist(hspc@data["HIV",], breaks=80)
hist(hspc@data["HIV",], breaks=100)
hist(hspc@data["HIV",], breaks=10)
hist(hspc@data["HIV",], breaks=100)
max(hspc@data["HIV",])
min(hspc@data["HIV",])
max(density(hspc@data["HIV",],from=0,to=max(hspc@data["HIV",]))$x)
min(density(hspc@data["HIV",],from=0,to=max(hspc@data["HIV",]))$x)
min(density(hspc@data["HIV",]$x)
)
min(density(hspc@data["HIV",])$x)
plot(density(hspc@data["HIV",]))
plot(density(hspc@data["HIV",],from=0,to=max(hspc@data["HIV",])))
hist(hspc@data["HIV",], breaks=100)
hist(hspc@data["HIV",], breaks=200)
hist(hspc@data["HIV",], breaks=250)
hist(hspc@data["HIV",], breaks=100)
hspc@data["HIV",],from=0,to=max(hspc@data["HIV",])
(hspc@data["HIV",],from=0,to=max(hspc@data["HIV",]))
hspc@data["HIV",]
hspc@data["HIV",] > 3.5
type(hspc@data)
typeof(hspc@data)
hspc@data
mtx = hspc@data[hspc@data["HIV",] < 3.5]
mtx
rm(mtx)
?sample
hspc@data["HIV",] < 3.5
infected <- hspc@data["HIV",] < 3.5
hspc <- AddMetaData(object = hspc, metadata = infected, col.name = "infected")
View(hspc)
hspc.list <- SplitObject(hspc, attribute.1 = "infected")
View(hspc.list)
save.image("~/Desktop/Project/data/Rdata.RData")
View(hspc.list)
saveRDS(hspc.list, file = "hspc.list.rds")
